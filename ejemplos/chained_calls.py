import os
from openai import OpenAI
from dotenv import load_dotenv

load_dotenv()
client = OpenAI(api_key=os.getenv("OPENAI_API_KEY"))

tema = "¬øQu√© es la computaci√≥n cu√°ntica?"

# Primera llamada: obtener explicaci√≥n inicial
explicacion_inicial = client.chat.completions.create(
    model="gpt-4-turbo",
    temperature=0.7,
    messages=[
        {"role": "user", "content": f"Explica brevemente: {tema}"}
    ],
).choices[0].message.content

# Segunda llamada: obtener sugerencias de mejora
sugerencias = client.chat.completions.create(
    model="gpt-4-turbo",
    temperature=0.5,
    messages=[
        {"role": "system", "content": "Eres un editor experto en explicar conceptos complejos claramente."},
        {"role": "user", "content": f"Dame sugerencias concretas para mejorar esta explicaci√≥n:\n{explicacion_inicial}"}
    ],
).choices[0].message.content

# Tercera llamada: obtener la versi√≥n final mejorada
explicacion_mejorada = client.chat.completions.create(
    model="gpt-4-turbo",
    temperature=0.5,
    messages=[
        {"role": "system", "content": "Utiliza las sugerencias proporcionadas para mejorar y aclarar la explicaci√≥n original."},
        {"role": "user", "content": f"Explicaci√≥n original:\n{explicacion_inicial}\n\nSugerencias de mejora:\n{sugerencias}\n\nEscribe ahora una explicaci√≥n mejorada en un p√°rrafo breve."}
    ],
).choices[0].message.content

# Mostrar resultados encadenados
print("üî∏ Explicaci√≥n inicial:\n", explicacion_inicial, "\n")
print("üîπ Sugerencias de mejora:\n", sugerencias, "\n")
print("‚úÖ Explicaci√≥n mejorada:\n", explicacion_mejorada)
